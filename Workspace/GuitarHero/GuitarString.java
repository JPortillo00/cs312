/* * CS312 Assignment 12. * On my honor, Jairo Portillo, this programming assignment is my own work. * Section Number: * * A program to play 37 notes mimicking guitar string plucking. * *  Name: Jairo Portillo *  email address: portillo.jairojr@gmail.com *  UTEID:jep2896 *  Section 5 digit ID: 53565 *  Grader name: Taylor *  No slip days are allowed on this assignment: */import java.util.*;public class GuitarString {    private RingBuffer ringBuff;    private int time = 0;    // create a guitar string of the given frequency, using a sampling rate of 44,100    public GuitarString(double frequency){        ringBuff = new RingBuffer( (int) Math.round(44100/frequency));        while(!ringBuff.isFull()){            ringBuff.enqueue(0);        }    }     // create a guitar string whose size and initial values are given by the array    public GuitarString(double[] init){        ringBuff  = new RingBuffer(init.length);        int i = 0;         while(ringBuff.isFull()){            ringBuff.enqueue(init[i]);            i++;        }    }         // set the buffer to white noise (random values between -0.5 and +0.5)    public void pluck(){        Random rand = new Random ();        for(int i = 0; i < ringBuff.size(); i++){            double noise = rand.nextInt(11)*0.1 - 0.5;            ringBuff.dequeue();            ringBuff.enqueue(noise);        }    }    // advance the simulation one time step    public void tic(){                        double s1 = ringBuff.peek();        ringBuff.dequeue();        double s2 = ringBuff.peek();        double KarStr = (s1+s2)/2 * 0.994;        ringBuff.enqueue(KarStr);        time++;     }    // return the current sample    public double sample(){        return ringBuff.peek();    }    // return number of tics    public int time(){        return time;    }}